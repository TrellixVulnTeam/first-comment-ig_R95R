"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.incomingPublishFlow = void 0;
const mqtt_utilities_1 = require("../mqtt.utilities");
const packet_writer_1 = require("../packets/packet-writer");
const mqtt_constants_1 = require("../mqtt.constants");
// PINGREQ is from client to server
//
// export function incomingPingFlow(): PacketFlowFunc<DefaultPacketReadResultMap, void> {
//     return success => ({
//         start: () => {
//             success();
//             return new PingResponsePacket();
//         },
//     });
// }
function incomingPublishFlow(message, identifier) {
    return success => ({
        start: () => {
            let packet = undefined;
            let emit = true;
            if (message.qosLevel === 1) {
                packet = packet_writer_1.defaultWrite(mqtt_constants_1.PacketType.PubAck, { identifier });
            }
            else if (message.qosLevel === 2) {
                packet = packet_writer_1.defaultWrite(mqtt_constants_1.PacketType.PubRec, { identifier });
                emit = false;
            }
            if (emit)
                success(message);
            return packet;
        },
        accept: packet => mqtt_utilities_1.isPubRel(packet) && packet.identifier === identifier,
        next: () => {
            success(message);
            return packet_writer_1.defaultWrite(mqtt_constants_1.PacketType.PubComp, { identifier });
        },
    });
}
exports.incomingPublishFlow = incomingPublishFlow;
//# sourceMappingURL=incoming.flows.js.map