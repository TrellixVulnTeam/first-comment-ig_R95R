"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TlsTransport = void 0;
const transport_1 = require("./transport");
const tls_1 = require("tls");
const net_1 = require("net");
class TlsTransport extends transport_1.Transport {
    constructor(options) {
        super(options);
        this.reset();
    }
    reset() {
        this.underlyingSocket = new net_1.Socket();
        this.underlyingSocket.setNoDelay(true);
        this.duplex = new tls_1.TLSSocket(this.underlyingSocket);
        this.duplex.setNoDelay(true);
        // buffer packets until connect()
        this.duplex.cork();
    }
    connect() {
        return new Promise(resolve => {
            this.underlyingSocket.connect(this.options.port, this.options.host);
            this.duplex.connect({
                ...this.options.additionalOptions,
                host: this.options.host,
                port: this.options.port,
            }, () => {
                this.duplex.uncork();
                resolve();
            });
        });
    }
}
exports.TlsTransport = TlsTransport;
//# sourceMappingURL=tls.transport.js.map